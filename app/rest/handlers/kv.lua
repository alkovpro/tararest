---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by alkov.
--- DateTime: 24.11.2019 00:02
---
local checks = require('checks')

local function check_body(body, ...)
    local args = ...
    local function check_body_inner(body)
        checks(args)
    end
    check_body_inner(body)
end

local function get_data(key_id, req)
    local data = box.space.data.index.primary:select(key_id)[1]
    if data == nil then
        local res = req:render {
            json = { error = 'key "' .. key_id .. '" not found!' }
        }
        res.status = 404
        return data, res
    end
    return data, nil
end

local function kv_get(req)
    local key_id = req:stash('id')
    local data, res = get_data(key_id, req)
    if res ~= nil then
        return res
    end
    return req:render { json = { value = data[2] } }
end

local function kv_post(req)
    local data = req:json()
    check_body(data, { key = 'string', value = 'table' })
    local key_id = data.key
    local value = data.value
    local old_data = box.space.data.index.primary:select(key_id)[1]
    if old_data ~= nil then
        local res = req:render {
            json = { error = 'key "' .. key_id .. '" already exists!' }
        }
        res.status = 409
        return res
    end
    box.space.data:insert({ key_id, value })
    local new_data = box.space.data.index.primary:select(key_id)[1]
    return req:render { json = { key = new_data[1], value = new_data[2] } }
end

local function kv_put(req)
    local key_id = req:stash('id')
    local data = req:json()
    check_body(data, { value = 'table' })
    local value = data.value
    local _, res = get_data(key_id, req)
    if res ~= nil then
        return res
    end
    local new_data = box.space.data:update(key_id, { { '=', 2, value } })
    return req:render { json = { value = new_data[2] } }
end

local function kv_delete(req)
    local key_id = req:stash('id')
    local _, res = get_data(key_id, req)
    if res ~= nil then
        return res
    end
    box.space.data:delete(key_id)
    return req:render { json = { success = true } }
end

local kv = {
    get = kv_get,
    post = kv_post,
    put = kv_put,
    delete = kv_delete,
}

return kv
